(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(800, 600, Phaser.AUTO, 'robo-game');

window.playerState = {
  currentLevel: 'Game'
};

game.state.add('Boot', require('./states/Boot'));
game.state.add('Splash', require('./states/Splash'));
game.state.add('Preloader', require('./states/Preloader'));
game.state.add('Menu', require('./states/Menu'));
game.state.add('Game', require('./states/Game'));

game.state.start('Boot');

},{"./states/Boot":"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Boot.js","./states/Game":"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Game.js","./states/Menu":"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Menu.js","./states/Preloader":"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Preloader.js","./states/Splash":"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Splash.js"}],"/Users/dblue/Documents/projects/phaser-generator/src/js/entities/Character.js":[function(require,module,exports){
/**
 * @class Character
 *
 * @extends Phaser.Sprite
 *
 * @description
 * Create a character sprite with arcade physics turned on and add it to the game
 *
 * @param {object} game - reference to the game object
 * @param {number} x - x position of character
 * @param {number} y - y position of character
 * @param {string} spriteName - the name of the loaded sprite
 *
 * @constructor
 */
function Character(game, x, y, spriteName) {
  Phaser.Sprite.apply(this, arguments);

  game.physics.arcade.enable(this);

  game.add.existing(this);
}

Character.prototype = Object.create(Phaser.Sprite.prototype);
Character.prototype.constructor = Character;

module.exports = Character;

},{}],"/Users/dblue/Documents/projects/phaser-generator/src/js/entities/Player.js":[function(require,module,exports){
var Character = require('./Character');

/**
 * @class Player
 *
 * @extends Character
 *
 * @description
 * Create the player character with keyboard controls
 *
 * @param {object} game - reference to the game object
 * @param {number} x - the x position of the player
 * @param {number} y - the y position of the player
 *
 *
 * @constructor
 */
function Player(game, x, y) {
  Character.call(this, game, x, y, 'robot');

  this.cursors = game.input.keyboard.createCursorKeys();

  this.body.collideWorldBounds = true;

  // Left animation
  this.animations.add('player-left', [0, 1], 12, true);

  // Idle animation
  this.animations.add('player-idle', [2, 3], 12, true);

  // Right animation
  this.animations.add('player-right', [4, 5], 12, true);

  game.add.existing(this);
}

Player.prototype = Object.create(Character.prototype);
Player.prototype.constructor = Player;

/**
 * @name update
 *
 * @description
 * Automatically called by World.update
 * Sets keyboard controls for the player
 */
Player.prototype.update = function() {
  var cursors = this.cursors;

  if (key('left')) {
    this.body.velocity.x = -200;

    this.animations.play('player-left');
  }
  else if (key('right')) {
    this.body.velocity.x = 200;

    this.animations.play('player-right');
  }
  else {
    this.body.velocity.x = 0;

    this.animations.play('player-idle');
  }

  if (key('up')) {
    this.body.velocity.y = -200;
  }
  else if (key('down')) {
    this.body.velocity.y = 200;
  }
  else {
    this.body.velocity.y = 0;
  }

  /**
   * @name key
   *
   * @param {string} dir - the key direction to check
   *
   * @return {boolean}
   */
  function key(dir) {
    return cursors[dir].isDown;
  }
};

module.exports = Player;

},{"./Character":"/Users/dblue/Documents/projects/phaser-generator/src/js/entities/Character.js"}],"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Boot.js":[function(require,module,exports){
function Boot () {}

Boot.prototype.preload = function preload () {
  this.load.image('preloader', 'assets/preloader.gif');
};

Boot.prototype.create = function create() {
  this.game.input.maxPointers = 1;

  if(this.game.device.desktop) {
    this.game.stage.scale.pageAlignHorizontally = true;
  }
  else {
    this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
    this.game.scale.minWidth =  480;
    this.game.scale.minHeight = 260;
    this.game.scale.maxWidth = 640;
    this.game.scale.maxHeight = 480;
    this.game.scale.forceLandscape = true;
    this.game.scale.pageAlignHorizontally = true;
    this.game.scale.setScreenSize(true);
  }

  this.game.state.start('Preloader');
};

module.exports = Boot;

},{}],"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Game.js":[function(require,module,exports){
var Player = require('../entities/Player');

function Game() {
  this.player = null;
}

Game.prototype.create = function create() {
  var x = (this.game.width / 2) - 100;
  var y = (this.game.height / 2) - 50;

  this.player = new Player(this.game, x, y);

  this.player.anchor.setTo(0.5, 0.5);

  this.input.onDown.add(this.onInputDown, this);
};

Game.prototype.update = function update() {

};

Game.prototype.onInputDown = function onInputDown() {
  this.game.state.start('Menu');
};

module.exports = Game;

},{"../entities/Player":"/Users/dblue/Documents/projects/phaser-generator/src/js/entities/Player.js"}],"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Menu.js":[function(require,module,exports){
function Menu() {
  this.text = null;
}

Menu.prototype.create =function () {
  var x = this.game.width / 2;
  var y = this.game.height / 2;

  var style = { font: "65px Arial", fill: "#ffffff", align: "center" };

  this.text = this.add.text(x - 200, y - 100, "Press to Start", style);

  this.input.onDown.add(this.onDown, this);
};

Menu.prototype.update = function () {
};

Menu.prototype.onDown = function () {
  this.game.state.start(playerState.currentLevel);
};

module.exports = Menu;

},{}],"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype.preload = function () {
  this.asset = this.add.sprite(320, 240, 'preloader');
  this.asset.anchor.setTo(0.5, 0.5);

  this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
  this.load.setPreloadSprite(this.asset);

  this.load.spritesheet('robot', 'assets/robot.png', 55, 100)
};

Preloader.prototype.create = function () {
  this.asset.cropEnabled = false;
};

Preloader.prototype.update = function () {
  if (!!this.ready) {
    this.game.state.start('Menu');
  }
};

Preloader.prototype.onLoadComplete = function () {
  this.ready = true;
};

},{}],"/Users/dblue/Documents/projects/phaser-generator/src/js/states/Splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}]},{},["./src/js/main.js"])
//# sourceMappingURL=data:application/json;base64,
